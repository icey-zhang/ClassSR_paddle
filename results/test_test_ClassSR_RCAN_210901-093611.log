21-09-01 09:36:11.824 - INFO:   name: test_ClassSR_RCAN
  suffix: None
  model: ClassSR
  distortion: sr
  scale: 4
  patch_size: 32
  step: 28
  crop_border: None
  gpu_ids: [0]
  add_mask: False
  datasets:[
    test_1:[
      name: test2k
      mode: LQGT_rcan
      dataroot_GT: /home/amax/code/classsr/test2K/GT
      dataroot_LQ: /home/amax/code/classsr/test2K/LR
      phase: test
      scale: 4
      data_type: img
    ]
  ]
  network_G:[
    which_model_G: classSR_3class_rcan
    in_nc: 3
    out_nc: 3
    scale: 4
  ]
  path:[
    pretrain_model_G: /home/amax/zjq/ClassSR-main_paddle/codes/experiments/pre_trained_models/latest_G.pth
    pretrain_model_classifier: None
    pretrain_model_G_branch1: None
    pretrain_model_G_branch2: None
    pretrain_model_G_branch3: None
    root: /home/amax/code/classsr
    results_root: /home/amax/code/classsr/results/test_ClassSR_RCAN
    log: /home/amax/code/classsr/results/test_ClassSR_RCAN
  ]
  is_train: False

21-09-01 09:36:11.839 - INFO: Number of test images in [test2k]: 100
21-09-01 09:36:23.144 - INFO: Network G structure: classSR_3class_rcan, with parameters: 30,114,948
21-09-01 09:36:23.144 - INFO: classSR_3class_rcan(
  (classifier): Classifier(
    (lastOut): Linear(in_features=32, out_features=3, dtype=float32)
    (CondNet): Sequential(
      (0): Conv2D(3, 128, kernel_size=[4, 4], stride=[4, 4], data_format=NCHW)
      (1): LeakyReLU(negative_slope=0.1)
      (2): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
      (3): LeakyReLU(negative_slope=0.1)
      (4): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
      (5): LeakyReLU(negative_slope=0.1)
      (6): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
      (7): LeakyReLU(negative_slope=0.1)
      (8): Conv2D(128, 32, kernel_size=[1, 1], data_format=NCHW)
    )
  )
  (net1): RCAN(
    (sub_mean): Conv2D(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (add_mean): Conv2D(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (head): Sequential(
      (0): Conv2D(3, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (body): Sequential(
      (0): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (1): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (2): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (3): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (4): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (5): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (6): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (7): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (8): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (9): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (10): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (tail): Sequential(
      (0): Upsampler(
        (0): Conv2D(36, 144, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (1): PixelShuffle(upscale_factor=2)
        (2): Conv2D(36, 144, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (3): PixelShuffle(upscale_factor=2)
      )
      (1): Conv2D(36, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (net2): RCAN(
    (sub_mean): Conv2D(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (add_mean): Conv2D(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (head): Sequential(
      (0): Conv2D(3, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (body): Sequential(
      (0): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (1): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (2): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (3): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (4): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (5): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (6): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (7): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (8): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (9): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (10): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (tail): Sequential(
      (0): Upsampler(
        (0): Conv2D(50, 200, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (1): PixelShuffle(upscale_factor=2)
        (2): Conv2D(50, 200, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (3): PixelShuffle(upscale_factor=2)
      )
      (1): Conv2D(50, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (net3): RCAN(
    (sub_mean): Conv2D(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (add_mean): Conv2D(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (head): Sequential(
      (0): Conv2D(3, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (body): Sequential(
      (0): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (1): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (2): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (3): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (4): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (5): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (6): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (7): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (8): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (9): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (10): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (tail): Sequential(
      (0): Upsampler(
        (0): Conv2D(64, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (1): PixelShuffle(upscale_factor=2)
        (2): Conv2D(64, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (3): PixelShuffle(upscale_factor=2)
      )
      (1): Conv2D(64, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
21-09-01 09:36:24.311 - INFO: Loading model for G [/home/amax/zjq/ClassSR-main_paddle/codes/experiments/pre_trained_models/latest_G.pth] ...
21-09-01 09:36:30.941 - INFO: Model [ClassSR_Model] is created.
21-09-01 09:36:30.942 - INFO: 
Testing [test2k]...
21-09-01 09:37:02.876 - INFO: 1201                 - PSNR: 32.261230 dB;  PSNR_Y: 33.687861 dB; .
21-09-01 09:37:02.876 - INFO: 1201 - type1: 15 type2: 9 type3: 4 FLOPs: 16.5875 Percent: 0.508819018404908.
21-09-01 09:39:11.168 - INFO: 1202                 - PSNR: 24.454561 dB;  PSNR_Y: 26.265380 dB; .
21-09-01 09:39:11.168 - INFO: 1202 - type1: 0 type2: 38 type3: 88 FLOPs: 28.76984126984127 Percent: 0.8825104684000389.
21-09-01 09:41:39.123 - INFO: 1203                 - PSNR: 26.306635 dB;  PSNR_Y: 27.710626 dB; .
21-09-01 09:41:39.123 - INFO: 1203 - type1: 28 type2: 66 type3: 46 FLOPs: 22.15885714285714 Percent: 0.6797195442594215.
21-09-01 09:43:53.628 - INFO: 1204                 - PSNR: 27.068776 dB;  PSNR_Y: 28.552026 dB; .
21-09-01 09:43:53.629 - INFO: 1204 - type1: 64 type2: 28 type3: 34 FLOPs: 18.46603174603175 Percent: 0.5664426915960659.
21-09-01 09:46:06.817 - INFO: 1205                 - PSNR: 27.806571 dB;  PSNR_Y: 29.124262 dB; .
21-09-01 09:46:06.817 - INFO: 1205 - type1: 0 type2: 87 type3: 39 FLOPs: 23.83095238095238 Percent: 0.7310108092316681.
21-09-01 09:48:19.559 - INFO: 1206                 - PSNR: 25.026839 dB;  PSNR_Y: 26.476517 dB; .
21-09-01 09:48:19.560 - INFO: 1206 - type1: 10 type2: 40 type3: 76 FLOPs: 26.800793650793647 Percent: 0.8221102346869217.
21-09-01 09:50:33.294 - INFO: 1207                 - PSNR: 25.368407 dB;  PSNR_Y: 26.774027 dB; .
21-09-01 09:50:33.294 - INFO: 1207 - type1: 45 type2: 38 type3: 43 FLOPs: 20.81626984126984 Percent: 0.6385358847015288.
21-09-01 09:52:31.641 - INFO: 1208                 - PSNR: 25.355734 dB;  PSNR_Y: 26.802015 dB; .
21-09-01 09:52:31.642 - INFO: 1208 - type1: 51 type2: 27 type3: 34 FLOPs: 19.397589285714286 Percent: 0.5950180762489045.
21-09-01 09:54:45.834 - INFO: 1209                 - PSNR: 21.560628 dB;  PSNR_Y: 22.736357 dB; .
21-09-01 09:54:45.834 - INFO: 1209 - type1: 26 type2: 18 type3: 82 FLOPs: 26.190317460317463 Percent: 0.8033839711753823.
21-09-01 09:56:49.607 - INFO: 1210                 - PSNR: 21.937776 dB;  PSNR_Y: 23.207158 dB; .
21-09-01 09:56:49.607 - INFO: 1210 - type1: 8 type2: 12 type3: 106 FLOPs: 29.97650793650794 Percent: 0.9195247833284643.
21-09-01 09:59:34.509 - INFO: 1211                 - PSNR: 28.410104 dB;  PSNR_Y: 29.837777 dB; .
21-09-01 09:59:34.510 - INFO: 1211 - type1: 72 type2: 25 type3: 57 FLOPs: 20.126363636363635 Percent: 0.6173731176798661.
21-09-01 10:01:39.130 - INFO: 1212                 - PSNR: 24.080364 dB;  PSNR_Y: 25.394927 dB; .
21-09-01 10:01:39.131 - INFO: 1212 - type1: 18 type2: 26 type3: 82 FLOPs: 26.79793650793651 Percent: 0.822022592267991.
21-09-01 10:03:15.665 - INFO: 1213                 - PSNR: 28.322828 dB;  PSNR_Y: 30.254246 dB; .
21-09-01 10:03:15.665 - INFO: 1213 - type1: 44 type2: 41 type3: 13 FLOPs: 17.28795918367347 Percent: 0.5303054964317014.
21-09-01 10:05:23.006 - INFO: 1214                 - PSNR: 24.642386 dB;  PSNR_Y: 26.119212 dB; .
21-09-01 10:05:23.006 - INFO: 1214 - type1: 56 type2: 18 type3: 52 FLOPs: 20.88793650793651 Percent: 0.6407342487097089.
21-09-01 10:07:34.878 - INFO: 1215                 - PSNR: 24.044138 dB;  PSNR_Y: 25.414660 dB; .
21-09-01 10:07:34.879 - INFO: 1215 - type1: 20 type2: 36 type3: 70 FLOPs: 25.436507936507937 Percent: 0.7802609796474826.
21-09-01 10:09:45.973 - INFO: 1216                 - PSNR: 24.799059 dB;  PSNR_Y: 26.691846 dB; .
21-09-01 10:09:45.973 - INFO: 1216 - type1: 8 type2: 72 type3: 46 FLOPs: 23.92888888888889 Percent: 0.7340149965916837.
21-09-01 10:12:02.311 - INFO: 1217                 - PSNR: 28.217902 dB;  PSNR_Y: 29.890588 dB; .
21-09-01 10:12:02.312 - INFO: 1217 - type1: 42 type2: 49 type3: 35 FLOPs: 20.23777777777778 Percent: 0.6207907293796865.
21-09-01 10:14:15.580 - INFO: 1218                 - PSNR: 24.383929 dB;  PSNR_Y: 25.806438 dB; .
21-09-01 10:14:15.581 - INFO: 1218 - type1: 12 type2: 37 type3: 77 FLOPs: 26.74968253968254 Percent: 0.8205424091927159.
21-09-01 10:15:44.655 - INFO: 1219                 - PSNR: 26.146219 dB;  PSNR_Y: 27.607980 dB; .
21-09-01 10:15:44.655 - INFO: 1219 - type1: 29 type2: 29 type3: 26 FLOPs: 20.527023809523808 Percent: 0.6296633070406076.
21-09-01 10:18:02.762 - INFO: 1220                 - PSNR: 23.286139 dB;  PSNR_Y: 24.727899 dB; .
21-09-01 10:18:02.762 - INFO: 1220 - type1: 36 type2: 9 type3: 81 FLOPs: 25.33 Percent: 0.7769938650306748.
21-09-01 10:19:51.280 - INFO: 1221                 - PSNR: 26.366578 dB;  PSNR_Y: 27.824142 dB; .
21-09-01 10:19:51.281 - INFO: 1221 - type1: 50 type2: 9 type3: 39 FLOPs: 20.071428571428573 Percent: 0.6156879929886065.
21-09-01 10:22:54.649 - INFO: 1222                 - PSNR: 24.985635 dB;  PSNR_Y: 26.573340 dB; .
21-09-01 10:22:54.650 - INFO: 1222 - type1: 90 type2: 10 type3: 68 FLOPs: 19.913690476190474 Percent: 0.6108494011101372.
21-09-01 10:25:14.446 - INFO: 1223                 - PSNR: 22.146710 dB;  PSNR_Y: 23.508318 dB; .
21-09-01 10:25:14.446 - INFO: 1223 - type1: 25 type2: 10 type3: 91 FLOPs: 27.173412698412697 Percent: 0.8335402668224754.
21-09-01 10:27:34.344 - INFO: 1224                 - PSNR: 36.411156 dB;  PSNR_Y: 37.996229 dB; .
21-09-01 10:27:34.345 - INFO: 1224 - type1: 98 type2: 25 type3: 3 FLOPs: 12.759047619047617 Percent: 0.3913818288051416.
21-09-01 10:29:34.379 - INFO: 1225                 - PSNR: 22.198845 dB;  PSNR_Y: 23.537749 dB; .
21-09-01 10:29:34.379 - INFO: 1225 - type1: 10 type2: 27 type3: 75 FLOPs: 27.55 Percent: 0.8450920245398773.
21-09-01 10:31:50.276 - INFO: 1226                 - PSNR: 31.235292 dB;  PSNR_Y: 32.601445 dB; .
21-09-01 10:31:50.276 - INFO: 1226 - type1: 85 type2: 25 type3: 16 FLOPs: 15.056746031746032 Percent: 0.4618633752069335.
21-09-01 10:34:21.506 - INFO: 1227                 - PSNR: 27.703254 dB;  PSNR_Y: 28.989157 dB; .
21-09-01 10:34:21.507 - INFO: 1227 - type1: 2 type2: 43 type3: 81 FLOPs: 27.912380952380953 Percent: 0.8562080046742624.
21-09-01 10:38:54.948 - INFO: 1228                 - PSNR: 27.317671 dB;  PSNR_Y: 29.001541 dB; .
21-09-01 10:38:54.949 - INFO: 1228 - type1: 24 type2: 70 type3: 88 FLOPs: 24.77868131868132 Percent: 0.7600822490393042.
21-09-01 10:42:00.809 - INFO: 1229                 - PSNR: 27.630371 dB;  PSNR_Y: 29.033704 dB; .
21-09-01 10:42:00.810 - INFO: 1229 - type1: 38 type2: 49 type3: 39 FLOPs: 20.944761904761904 Percent: 0.6424773590417762.
21-09-01 10:45:08.461 - INFO: 1230                 - PSNR: 26.392164 dB;  PSNR_Y: 27.640566 dB; .
21-09-01 10:45:08.462 - INFO: 1230 - type1: 8 type2: 86 type3: 32 FLOPs: 22.517777777777777 Percent: 0.6907293796864349.
21-09-01 10:48:35.560 - INFO: 1231                 - PSNR: 25.349786 dB;  PSNR_Y: 26.693859 dB; .
21-09-01 10:48:35.560 - INFO: 1231 - type1: 62 type2: 26 type3: 52 FLOPs: 20.379 Percent: 0.6251226993865031.
21-09-01 10:50:57.865 - INFO: 1232                 - PSNR: 30.182388 dB;  PSNR_Y: 31.715438 dB; .
21-09-01 10:50:57.866 - INFO: 1232 - type1: 58 type2: 41 type3: 27 FLOPs: 18.216190476190473 Percent: 0.5587788489628979.
21-09-01 10:52:46.259 - INFO: 1233                 - PSNR: 22.003885 dB;  PSNR_Y: 23.328506 dB; .
21-09-01 10:52:46.260 - INFO: 1233 - type1: 1 type2: 17 type3: 80 FLOPs: 30.169693877551023 Percent: 0.9254507324402154.
21-09-01 10:55:06.946 - INFO: 1234                 - PSNR: 23.062298 dB;  PSNR_Y: 24.255877 dB; .
21-09-01 10:55:06.946 - INFO: 1234 - type1: 0 type2: 31 type3: 95 FLOPs: 29.475396825396825 Percent: 0.9041532768526633.
21-09-01 10:57:27.837 - INFO: 1235                 - PSNR: 26.892542 dB;  PSNR_Y: 27.946950 dB; .
21-09-01 10:57:27.837 - INFO: 1235 - type1: 50 type2: 41 type3: 35 FLOPs: 19.63015873015873 Percent: 0.6021521082870775.
21-09-01 10:59:48.729 - INFO: 1236                 - PSNR: 38.018748 dB;  PSNR_Y: 39.266843 dB; .
21-09-01 10:59:48.730 - INFO: 1236 - type1: 81 type2: 20 type3: 25 FLOPs: 16.26769841269841 Percent: 0.49900915376375493.
21-09-01 11:02:10.706 - INFO: 1237                 - PSNR: 21.067940 dB;  PSNR_Y: 22.389475 dB; .
21-09-01 11:02:10.707 - INFO: 1237 - type1: 0 type2: 6 type3: 120 FLOPs: 31.995238095238097 Percent: 0.981449021326322.
21-09-01 11:05:49.223 - INFO: 1238                 - PSNR: 28.640149 dB;  PSNR_Y: 29.894336 dB; .
21-09-01 11:05:49.223 - INFO: 1238 - type1: 67 type2: 56 type3: 73 FLOPs: 21.358724489795915 Percent: 0.6551755978465004.
21-09-01 11:08:12.508 - INFO: 1239                 - PSNR: 25.786601 dB;  PSNR_Y: 27.082743 dB; .
21-09-01 11:08:12.508 - INFO: 1239 - type1: 52 type2: 10 type3: 64 FLOPs: 22.40126984126984 Percent: 0.6871555166033693.
21-09-01 11:10:35.158 - INFO: 1240                 - PSNR: 26.748413 dB;  PSNR_Y: 28.262662 dB; .
21-09-01 11:10:35.158 - INFO: 1240 - type1: 11 type2: 61 type3: 54 FLOPs: 24.507380952380952 Percent: 0.7517601519135261.
21-09-01 11:12:54.761 - INFO: 1241                 - PSNR: 23.351738 dB;  PSNR_Y: 24.610696 dB; .
21-09-01 11:12:54.761 - INFO: 1241 - type1: 18 type2: 23 type3: 85 FLOPs: 27.10031746031746 Percent: 0.83129808160483.
21-09-01 11:15:08.294 - INFO: 1242                 - PSNR: 28.157046 dB;  PSNR_Y: 29.326309 dB; .
21-09-01 11:15:08.295 - INFO: 1242 - type1: 57 type2: 37 type3: 32 FLOPs: 18.796111111111113 Percent: 0.5765678254942059.
21-09-01 11:17:21.005 - INFO: 1243                 - PSNR: 25.009000 dB;  PSNR_Y: 26.277911 dB; .
21-09-01 11:17:21.006 - INFO: 1243 - type1: 22 type2: 45 type3: 59 FLOPs: 24.175873015873016 Percent: 0.7415911968059207.
21-09-01 11:19:39.793 - INFO: 1244                 - PSNR: 28.007423 dB;  PSNR_Y: 29.496647 dB; .
21-09-01 11:19:39.793 - INFO: 1244 - type1: 84 type2: 20 type3: 22 FLOPs: 15.737460317460318 Percent: 0.4827441815171877.
21-09-01 11:21:28.442 - INFO: 1245                 - PSNR: 27.645057 dB;  PSNR_Y: 28.936089 dB; .
21-09-01 11:21:28.443 - INFO: 1245 - type1: 38 type2: 16 type3: 44 FLOPs: 21.89122448979592 Percent: 0.6715099536747214.
21-09-01 11:24:02.679 - INFO: 1246                 - PSNR: 25.849190 dB;  PSNR_Y: 27.055448 dB; .
21-09-01 11:24:02.680 - INFO: 1246 - type1: 47 type2: 18 type3: 75 FLOPs: 23.490785714285714 Percent: 0.7205762489044697.
21-09-01 11:26:22.546 - INFO: 1247                 - PSNR: 30.916532 dB;  PSNR_Y: 32.578683 dB; .
21-09-01 11:26:22.546 - INFO: 1247 - type1: 15 type2: 80 type3: 31 FLOPs: 21.885317460317463 Percent: 0.6713287564514558.
21-09-01 11:28:43.463 - INFO: 1248                 - PSNR: 22.700257 dB;  PSNR_Y: 23.977872 dB; .
21-09-01 11:28:43.463 - INFO: 1248 - type1: 1 type2: 31 type3: 94 FLOPs: 29.298650793650793 Percent: 0.8987316194371409.
21-09-01 11:30:59.892 - INFO: 1249                 - PSNR: 28.743395 dB;  PSNR_Y: 29.959930 dB; .
21-09-01 11:30:59.892 - INFO: 1249 - type1: 38 type2: 57 type3: 31 FLOPs: 20.138412698412697 Percent: 0.6177427208102054.
21-09-01 11:33:15.803 - INFO: 1250                 - PSNR: 23.383630 dB;  PSNR_Y: 24.992536 dB; .
21-09-01 11:33:15.803 - INFO: 1250 - type1: 0 type2: 16 type3: 110 FLOPs: 30.987301587301587 Percent: 0.9505307235368584.
21-09-01 11:33:47.341 - INFO: 1251                 - PSNR: 24.009113 dB;  PSNR_Y: 25.374699 dB; .
21-09-01 11:33:47.341 - INFO: 1251 - type1: 4 type2: 8 type3: 16 FLOPs: 25.79 Percent: 0.7911042944785276.
21-09-01 11:35:48.158 - INFO: 1252                 - PSNR: 23.339183 dB;  PSNR_Y: 24.189998 dB; .
21-09-01 11:35:48.159 - INFO: 1252 - type1: 5 type2: 10 type3: 83 FLOPs: 30.167857142857144 Percent: 0.9253943908851885.
21-09-01 11:39:47.890 - INFO: 1253                 - PSNR: 27.294838 dB;  PSNR_Y: 28.771569 dB; .
21-09-01 11:39:47.891 - INFO: 1253 - type1: 3 type2: 86 type3: 65 FLOPs: 25.073961038961038 Percent: 0.769139909170584.
21-09-01 11:43:03.122 - INFO: 1254                 - PSNR: 26.123651 dB;  PSNR_Y: 27.562157 dB; .
21-09-01 11:43:03.122 - INFO: 1254 - type1: 0 type2: 62 type3: 64 FLOPs: 26.350793650793648 Percent: 0.8083065537053266.
21-09-01 11:46:19.422 - INFO: 1255                 - PSNR: 27.656843 dB;  PSNR_Y: 29.242308 dB; .
21-09-01 11:46:19.423 - INFO: 1255 - type1: 33 type2: 17 type3: 76 FLOPs: 25.05388888888889 Percent: 0.7685241990456714.
21-09-01 11:50:20.990 - INFO: 1256                 - PSNR: 26.408241 dB;  PSNR_Y: 27.910127 dB; .
21-09-01 11:50:20.991 - INFO: 1256 - type1: 66 type2: 35 type3: 53 FLOPs: 20.169350649350648 Percent: 0.6186917377101425.
21-09-01 11:51:53.586 - INFO: 1257                 - PSNR: 25.080085 dB;  PSNR_Y: 26.412884 dB; .
21-09-01 11:51:53.586 - INFO: 1257 - type1: 31 type2: 22 type3: 59 FLOPs: 23.94133928571429 Percent: 0.7343969106047328.
21-09-01 11:53:59.528 - INFO: 1258                 - PSNR: 27.326062 dB;  PSNR_Y: 29.411301 dB; .
21-09-01 11:53:59.529 - INFO: 1258 - type1: 31 type2: 80 type3: 43 FLOPs: 21.519675324675323 Percent: 0.6601127400207154.
21-09-01 11:55:42.725 - INFO: 1259                 - PSNR: 27.981370 dB;  PSNR_Y: 29.510095 dB; .
21-09-01 11:55:42.725 - INFO: 1259 - type1: 66 type2: 23 type3: 37 FLOPs: 18.61650793650794 Percent: 0.5710585256597527.
21-09-01 11:57:25.922 - INFO: 1260                 - PSNR: 24.319354 dB;  PSNR_Y: 25.419444 dB; .
21-09-01 11:57:25.922 - INFO: 1260 - type1: 22 type2: 19 type3: 85 FLOPs: 26.796507936507933 Percent: 0.8219787710585255.
21-09-01 11:59:09.013 - INFO: 1261                 - PSNR: 24.379945 dB;  PSNR_Y: 25.838256 dB; .
21-09-01 11:59:09.014 - INFO: 1261 - type1: 0 type2: 24 type3: 102 FLOPs: 30.180952380952384 Percent: 0.9257960853052878.
21-09-01 12:00:51.822 - INFO: 1262                 - PSNR: 24.979862 dB;  PSNR_Y: 26.294204 dB; .
21-09-01 12:00:51.822 - INFO: 1262 - type1: 46 type2: 26 type3: 54 FLOPs: 21.84904761904762 Percent: 0.6702161846333625.
21-09-01 12:02:34.731 - INFO: 1263                 - PSNR: 23.224781 dB;  PSNR_Y: 24.551969 dB; .
21-09-01 12:02:34.731 - INFO: 1263 - type1: 32 type2: 34 type3: 60 FLOPs: 23.517142857142854 Percent: 0.721384750219106.
21-09-01 12:04:17.584 - INFO: 1264                 - PSNR: 23.810752 dB;  PSNR_Y: 24.980488 dB; .
21-09-01 12:04:17.584 - INFO: 1264 - type1: 31 type2: 13 type3: 82 FLOPs: 25.810555555555556 Percent: 0.7917348329925017.
21-09-01 12:06:02.091 - INFO: 1265                 - PSNR: 24.142986 dB;  PSNR_Y: 25.610737 dB; .
21-09-01 12:06:02.091 - INFO: 1265 - type1: 16 type2: 30 type3: 80 FLOPs: 26.748253968253966 Percent: 0.8204985879832505.
21-09-01 12:07:45.009 - INFO: 1266                 - PSNR: 21.440195 dB;  PSNR_Y: 22.783815 dB; .
21-09-01 12:07:45.010 - INFO: 1266 - type1: 5 type2: 43 type3: 78 FLOPs: 27.382142857142856 Percent: 0.839943032427695.
21-09-01 12:09:16.460 - INFO: 1267                 - PSNR: 25.294866 dB;  PSNR_Y: 26.640557 dB; .
21-09-01 12:09:16.460 - INFO: 1267 - type1: 24 type2: 48 type3: 40 FLOPs: 22.384999999999998 Percent: 0.6866564417177913.
21-09-01 12:11:10.440 - INFO: 1268                 - PSNR: 25.283710 dB;  PSNR_Y: 26.601809 dB; .
21-09-01 12:11:10.440 - INFO: 1268 - type1: 59 type2: 21 type3: 60 FLOPs: 21.309785714285713 Percent: 0.6536744084136722.
21-09-01 12:12:53.111 - INFO: 1269                 - PSNR: 32.714001 dB;  PSNR_Y: 34.060221 dB; .
21-09-01 12:12:53.111 - INFO: 1269 - type1: 22 type2: 89 type3: 15 FLOPs: 19.74095238095238 Percent: 0.6055506865322815.
21-09-01 12:14:36.861 - INFO: 1270                 - PSNR: 34.671998 dB;  PSNR_Y: 36.048229 dB; .
21-09-01 12:14:36.862 - INFO: 1270 - type1: 65 type2: 61 type3: 0 FLOPs: 14.963095238095237 Percent: 0.458990651475314.
21-09-01 12:16:42.333 - INFO: 1271                 - PSNR: 24.718554 dB;  PSNR_Y: 26.223621 dB; .
21-09-01 12:16:42.334 - INFO: 1271 - type1: 19 type2: 41 type3: 94 FLOPs: 26.471233766233766 Percent: 0.8120010357740418.
21-09-01 12:18:25.255 - INFO: 1272                 - PSNR: 22.894811 dB;  PSNR_Y: 24.549899 dB; .
21-09-01 12:18:25.255 - INFO: 1272 - type1: 1 type2: 16 type3: 109 FLOPs: 30.810555555555556 Percent: 0.945109066121336.
21-09-01 12:20:08.074 - INFO: 1273                 - PSNR: 30.077298 dB;  PSNR_Y: 31.447595 dB; .
21-09-01 12:20:08.074 - INFO: 1273 - type1: 25 type2: 73 type3: 28 FLOPs: 20.8234126984127 Percent: 0.6387549907488558.
21-09-01 12:22:13.698 - INFO: 1274                 - PSNR: 28.917343 dB;  PSNR_Y: 30.270308 dB; .
21-09-01 12:22:13.699 - INFO: 1274 - type1: 31 type2: 101 type3: 22 FLOPs: 19.787857142857142 Percent: 0.6069894829097282.
21-09-01 12:23:45.192 - INFO: 1275                 - PSNR: 30.475804 dB;  PSNR_Y: 31.671479 dB; .
21-09-01 12:23:45.192 - INFO: 1275 - type1: 51 type2: 48 type3: 13 FLOPs: 17.016339285714285 Percent: 0.521973597721297.
21-09-01 12:25:50.507 - INFO: 1276                 - PSNR: 20.950036 dB;  PSNR_Y: 22.314572 dB; .
21-09-01 12:25:50.507 - INFO: 1276 - type1: 0 type2: 18 type3: 136 FLOPs: 31.115584415584415 Percent: 0.9544657796191538.
21-09-01 12:27:33.573 - INFO: 1277                 - PSNR: 25.169796 dB;  PSNR_Y: 26.842442 dB; .
21-09-01 12:27:33.574 - INFO: 1277 - type1: 5 type2: 47 type3: 74 FLOPs: 26.978968253968254 Percent: 0.8275757133119096.
21-09-01 12:28:30.947 - INFO: 1278                 - PSNR: 23.091057 dB;  PSNR_Y: 24.430744 dB; .
21-09-01 12:28:30.947 - INFO: 1278 - type1: 17 type2: 10 type3: 43 FLOPs: 25.377285714285712 Percent: 0.7784443470639789.
21-09-01 12:29:50.985 - INFO: 1279                 - PSNR: 27.079442 dB;  PSNR_Y: 28.455756 dB; .
21-09-01 12:29:50.986 - INFO: 1279 - type1: 28 type2: 17 type3: 53 FLOPs: 24.034081632653063 Percent: 0.7372417678727933.
21-09-01 12:31:21.945 - INFO: 1280                 - PSNR: 23.203337 dB;  PSNR_Y: 24.452588 dB; .
21-09-01 12:31:21.945 - INFO: 1280 - type1: 0 type2: 11 type3: 101 FLOPs: 31.352678571428577 Percent: 0.9617386064855391.
21-09-01 12:33:04.536 - INFO: 1281                 - PSNR: 23.285832 dB;  PSNR_Y: 24.632863 dB; .
21-09-01 12:33:04.536 - INFO: 1281 - type1: 11 type2: 28 type3: 87 FLOPs: 27.83357142857143 Percent: 0.8537905346187555.
21-09-01 12:34:24.552 - INFO: 1282                 - PSNR: 23.805032 dB;  PSNR_Y: 25.047141 dB; .
21-09-01 12:34:24.553 - INFO: 1282 - type1: 0 type2: 20 type3: 78 FLOPs: 30.008163265306123 Percent: 0.9204958056842368.
21-09-01 12:36:07.471 - INFO: 1283                 - PSNR: 31.834291 dB;  PSNR_Y: 33.297182 dB; .
21-09-01 12:36:07.471 - INFO: 1283 - type1: 84 type2: 25 type3: 17 FLOPs: 15.233492063492063 Percent: 0.4672850326224559.
21-09-01 12:37:50.719 - INFO: 1284                 - PSNR: 26.731005 dB;  PSNR_Y: 28.046631 dB; .
21-09-01 12:37:50.719 - INFO: 1284 - type1: 43 type2: 42 type3: 41 FLOPs: 20.766587301587304 Percent: 0.6370118804167885.
21-09-01 12:39:33.101 - INFO: 1285                 - PSNR: 26.610166 dB;  PSNR_Y: 28.259747 dB; .
21-09-01 12:39:33.102 - INFO: 1285 - type1: 55 type2: 15 type3: 56 FLOPs: 21.36706349206349 Percent: 0.6554313954620702.
21-09-01 12:41:15.753 - INFO: 1286                 - PSNR: 28.073860 dB;  PSNR_Y: 29.423017 dB; .
21-09-01 12:41:15.753 - INFO: 1286 - type1: 38 type2: 48 type3: 40 FLOPs: 21.045555555555556 Percent: 0.6455691888207226.
21-09-01 12:42:47.093 - INFO: 1287                 - PSNR: 25.844386 dB;  PSNR_Y: 27.209280 dB; .
21-09-01 12:42:47.093 - INFO: 1287 - type1: 33 type2: 33 type3: 46 FLOPs: 22.296339285714286 Percent: 0.6839367879053462.
21-09-01 12:44:29.908 - INFO: 1288                 - PSNR: 22.045836 dB;  PSNR_Y: 23.420438 dB; .
21-09-01 12:44:29.908 - INFO: 1288 - type1: 38 type2: 7 type3: 81 FLOPs: 25.17809523809524 Percent: 0.7723342097575226.
21-09-01 12:46:57.898 - INFO: 1289                 - PSNR: 24.236292 dB;  PSNR_Y: 25.522558 dB; .
21-09-01 12:46:57.898 - INFO: 1289 - type1: 68 type2: 10 type3: 104 FLOPs: 23.58153846153846 Percent: 0.7233600755073147.
21-09-01 12:48:41.000 - INFO: 1290                 - PSNR: 30.026533 dB;  PSNR_Y: 31.286168 dB; .
21-09-01 12:48:41.001 - INFO: 1290 - type1: 82 type2: 12 type3: 32 FLOPs: 16.89730158730159 Percent: 0.5183221345798034.
21-09-01 12:50:23.719 - INFO: 1291                 - PSNR: 30.402596 dB;  PSNR_Y: 32.332681 dB; .
21-09-01 12:50:23.719 - INFO: 1291 - type1: 67 type2: 44 type3: 15 FLOPs: 16.323095238095238 Percent: 0.500708442886357.
21-09-01 12:51:43.667 - INFO: 1292                 - PSNR: 28.175752 dB;  PSNR_Y: 29.681527 dB; .
21-09-01 12:51:43.667 - INFO: 1292 - type1: 59 type2: 9 type3: 30 FLOPs: 18.02622448979592 Percent: 0.5529516714661324.
21-09-01 12:52:52.332 - INFO: 1293                 - PSNR: 26.550271 dB;  PSNR_Y: 27.892830 dB; .
21-09-01 12:52:52.332 - INFO: 1293 - type1: 38 type2: 11 type3: 35 FLOPs: 20.862380952380953 Percent: 0.6399503359626059.
21-09-01 12:54:35.046 - INFO: 1294                 - PSNR: 26.492039 dB;  PSNR_Y: 27.883907 dB; .
21-09-01 12:54:35.047 - INFO: 1294 - type1: 6 type2: 57 type3: 63 FLOPs: 25.794285714285714 Percent: 0.7912357581069237.
21-09-01 12:55:55.105 - INFO: 1295                 - PSNR: 30.174076 dB;  PSNR_Y: 31.443432 dB; .
21-09-01 12:55:55.105 - INFO: 1295 - type1: 48 type2: 27 type3: 23 FLOPs: 18.19326530612245 Percent: 0.5580756228871917.
21-09-01 12:57:27.006 - INFO: 1296                 - PSNR: 25.318640 dB;  PSNR_Y: 26.431361 dB; .
21-09-01 12:57:27.006 - INFO: 1296 - type1: 28 type2: 22 type3: 62 FLOPs: 24.537857142857142 Percent: 0.7526950043821209.
21-09-01 12:59:10.208 - INFO: 1297                 - PSNR: 31.772737 dB;  PSNR_Y: 33.098409 dB; .
21-09-01 12:59:10.208 - INFO: 1297 - type1: 75 type2: 36 type3: 15 FLOPs: 15.715476190476192 Percent: 0.4820698217937482.
21-09-01 13:00:30.480 - INFO: 1298                 - PSNR: 30.156244 dB;  PSNR_Y: 31.681960 dB; .
21-09-01 13:00:30.480 - INFO: 1298 - type1: 52 type2: 31 type3: 15 FLOPs: 16.765918367346938 Percent: 0.514291974458495.
21-09-01 13:01:50.632 - INFO: 1299                 - PSNR: 25.662510 dB;  PSNR_Y: 26.561686 dB; .
21-09-01 13:01:50.632 - INFO: 1299 - type1: 28 type2: 35 type3: 35 FLOPs: 21.70142857142857 Percent: 0.6656879929886064.
21-09-01 13:03:33.616 - INFO: 1300                 - PSNR: 28.137078 dB;  PSNR_Y: 29.450847 dB; .
21-09-01 13:03:33.616 - INFO: 1300 - type1: 40 type2: 31 type3: 55 FLOPs: 22.405555555555555 Percent: 0.6872869802317655.
21-09-01 13:03:33.617 - INFO: # Validation # Class num: 3347 3387 5586 all:12320
21-09-01 13:03:33.617 - INFO: # FLOPs 2.3058e+01 Percent 7.0731e-01
21-09-01 13:03:33.617 - INFO: ----Average PSNR results for test2k----
	PSNR: 26.387784 dB; 

